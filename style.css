/* ================== */
/* Google Fonts */
/* ================== */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap');


@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;800;900&display=swap');

/* font-family: 'Poppins', sans-serif; */

/* ================== */
/* Root Style */
/* ================== */

:root {

    /* Color */
    --rich-black-fogra-29_95: hsla(222, 18%, 11%, 0.95);
    --raisin-black-1: hsl(0, 0%, 16%);
    --raisin-black-2: hsl(236, 17%, 17%);
    --raisin-black-3: hsl(280, 11%, 11%);
    --raisin-black-4: hsl(280, 8%, 15%);
    --english-violet: hsl(274, 21%, 23%);
    --eerie-black-1: hsl(277, 25%, 10%);
    --eerie-black-2: hsl(280, 7%, 8%);
    --roman-silver: hsl(220, 6%, 59%);
    --quick-silver: hsl(0, 1%, 65%);
    --light-gray-1: hsl(0, 0%, 80%);
    --light-gray-2: hsl(0, 2%, 82%);
    --marigold_75: hsla(42, 99%, 46%, 0.75);
    --xiketic_90: hsla(280, 37%, 8%, 0.9);
    --cultured-2: hsl(0, 0%, 97%);
    --marigold: hsl(42, 99%, 46%);
    --platinum: hsl(0, 0%, 89%);
    --dim-gray: hsl(0, 0%, 42%);
    --white_15: hsla(0, 0%, 100%, 0.15);
    --white_10: hsla(0, 0%, 100%, 0.1);
    --xiketic: hsl(277, 25%, 10%);
    --silver: hsl(0, 0%, 78%);
    --white: hsl(0, 0%, 100%);
    --jet: hsl(236, 13%, 23%);
    --debug: hsl(0, 100%, 50%);

    /* Typography */

    --ff-oxanium: 'Oxanium', cursive;
    --ff-poppins: 'Poppins', sans-serif;

    --fs-1: 7rem;
    --fs-2: 4.5rem;
    --fs-3: 3.6rem;
    --fs-4: 2.4rem;
    --fs-5: 2.2rem;
    --fs-6: 2rem;
    --fs-7: 1.6rem;
    --fs-8: 1.5rem;
    --fs-9: 1.4rem;
    --fs-10: 1.3rem;
    --fs-11: 1.2rem;

    --fw-500: 500;
    --fw-600: 600;
    --fw-700: 700;
    --fw-800: 800;

    /* Spacing */
    --section-padding: 120px;

    /* Gradient */
    --gradient: radial-gradient(circle, hsl(250, 7%, 17%), hsl(250, 11%, 11%));

    /* Shadow */
    --shadow-1: 0px 2px 8px 0px hsla(0, 0%, 0%, 0.2),
        inset 0px 2px 8px 0px hsla(0, 0%, 0%, 0.4);
    --shadow-2: 0px 5px 10px 1px hsla(0, 0%, 0%, 0.4);
    --shadow-3: 0px 5px 10px 1px hsla(219, 98%, 17%, 0.2);
    --shadow-4: 0px 5px 10px 1px hsla(0, 0%, 0%, 0.15);

    /* Transition */
    --transition: 0.55s ease;
    --transition2: 0.3s ease;
    --cubic-out: cubic-bezier(0.33, 0.85, 0.4, 0.96);
}



/* ================== */
/* Style Resets */
/* ================== */

*,
::before,
::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

li {
    list-style: none;
}

a {
    text-decoration: none;
    color: inherit;
}

a,
img,
span,
time,
input,
button,
ion-icon {
    display: block;
}

img {
    height: auto;
}

input,
button {
    background: none;
    border: none;
    font: inherit;
}

input {
    width: 100%;
}

button {
    cursor: pointer;
}

ion-icon {
    pointer-events: none;
}

/* This CSS rule ensures that the text within the <address> element is rendered with a normal font style */
address {
    font-style: normal;
}

html {
    font-family: var(--ff-poppins);
    font-size: 10px;
    scroll-behavior: smooth;
}

body {
    background-color: var(--raisin-black-3);
    font-size: 1.6rem;
    line-height: 1.5;
}

/* The outline-offset property specifies the amount of space between an outline and the edge of an element. In this case, it sets the outline offset to 4px, creating a space of 4 pixels between the outline and the element's edge for elements in the "focus-visible" state. */
:focus-visible {
    outline-offset: 4px;
}



/* ================== */
/* Reused Style */
/* ================== */

.container {
    padding-inline: 15px;
    /* background-color: var(--debug); */
}

.section {
    /* The padding-block CSS property defines the logical block start and end padding of an element */
    padding-block: var(--section-padding);
}

.h1,
.h2,
.h3 {
    color: var(--white);
    font-family: var(--ff-oxanium);
    font-weight: var(--fw-800);
    line-height: 1;
}

.h1 {
    font-size: var(--fs-2);
    letter-spacing: -3px;
}

.h2 {
    font-size: var(--fs-3);
}

.h3 {
    font-size: var(--fs-6);
    text-transform: uppercase;
}

:is(.h1, .h2, .h3, .card-price) .span {
    display: inline-block;
    color: var(--marigold);
}

.btn {
    margin-inline: auto;
    color: var(--eerie-black-1);
    font-size: var(--fs-8);
    text-transform: uppercase;
    font-weight: var(--fw-700);
    min-height: 55px;
    padding-inline: 35px;
}

.skewBg {
    position: relative;
    z-index: 1;
}

/* ======================================= */
/* ChatGpt */
/* .skewBg { transform: skewX(var(--skewX, -16deg)); } */
/* .skewBg { background-color: var(--bg, var(--marigold)); } */
/* ======================================= */

.skewBg::before {
    content: "";
    position: absolute;
    inset: 0;
    /* Specifies a skew transformation along the X axis by the given angle. */
    transform: skewX(var(--skewX, -16deg));
    background-color: var(--bg, var(--marigold));
    /* background-color: var(--marigold); */
    z-index: -1;
    /* background-color: var(--debug); */
}

.btn::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: calc(100% + 8px);
    width: 5px;
    transform: skewX(-16deg) translateX(var(--translateX, 0px));
    /* transform: skewX(-16deg) translateX(var(--translateX, -8px )); */
    background-color: var(--marigold);
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.btn:is(:hover, :focus)::after {
    --translateX: 12px;
}

.has-scrollbar {
    display: flex;
    gap: 30px;
    overflow-x: auto;
    padding-block-end: 30px;
    scroll-snap-type: inline mandatory;
    /* background-color: var(--debug); */
}

.has-scrollbar::-webkit-scrollbar {
    height: 10px;
    /* background-color: var(--debug); */
}

.has-scrollbar::-webkit-scrollbar-track {
    outline: 3px solid var(--marigold);
    /* background-color: var(--debug); */
}

.has-scrollbar::-webkit-scrollbar-thumb {
    background-color: var(--marigold);
    /* background-color: var(--debug); */
}

.has-scrollbar::-webkit-scrollbar-button {
    width: calc(25%-40px);
    /* background-color: var(--debug); */
}

.section-subtitle,
.section-title {
    position: relative;
    text-align: center;
    text-transform: uppercase;
    /* background-color: var(--debug); */
}

.section-subtitle {
    color: var(--silver);
    font-size: var(--fs-9);
    font-weight: var(--fw-700);
    margin-block-end: 10px;
    /* background-color: var(--debug); */
}

.section-title::after {
    content: url(./web-assets/title-underline.png);
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    /* background-color: var(--debug); */
}

.scrollbar-item {
    min-width: 100%;
    scroll-snap-align: start;
    /* background-color: var(--debug); */
    /* min-width: 50%; */
}

.card-banner {
    background-color: var(--light-gray-1);
}

.img-holder {
    aspect-ratio: var(--width) / var(--height);
}

.img-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.card-badge {
    min-height: 30px;
    color: var(--eerie-black-1);
    font-size: var(--fs-11);
    font-weight: var(--fw-700);
    text-transform: uppercase;
    /* Use the max-content inline size or max-content block size, as appropriate to the writing mode. */
    max-width: max-content;
    display: grid;
    align-items: center;
    padding-inline: 20px;
    /* background-color: var(--debug); */
}

.card-badge::before {
    --skewX: -10deg;
    /* background-color: var(--debug); */
}

.w-100 {
    width: 100%;
    /* background-color: var(--debug); */
}

.section-text {
    color: var(--color, var(--light-gray-1));
    font-size: var(--fs-8);
    font-weight: var(--fw-500);
    max-width: 65ch;
    margin-inline: auto;
    text-align: center;
    line-height: 1.8;
    /* background-color: var(--debug); */
}


/* ================== */
/* Header */
/* ================== */

.header-top,
.cart-btn,
.header-bottom::before,
.navbar-link::before {
    display: none;
}

.header {
    position: relative;
    min-height: 1px;
    /* background-color: var(--debug); */
}

.header-bottom {
    position: absolute;
    top: calc(100% - 1px);
    left: 0;
    width: 100%;
    background-color: var(--raisin-black-2);
    padding-block: 20px;
    z-index: 4;
    /* background-color: var(--debug); */
}

.header-bottom.active {
    position: fixed;
    /* top: -85px; */
    top: -100px;

    /* The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes. */
    animation: slideIn 0.5s var(--cubic-out) forwards;
    /* background-color: var(--debug); */
}

@keyframes slideIn {
    0% {
        transform: translateY(0);
    }

    100% {
        transform: translateY(100%);
    }
}

.header-bottom .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* background-color: var(--debug); */
}

.logo {
    color: var(--white);
    font-family: var(--ff-oxanium);
    font-size: 3rem;
    font-weight: var(--fw-800);
}

.header-actions {
    display: flex;
    align-items: center;
    gap: 20px;
    /* background-color: var(--debug); */
}


.search-btn {
    color: var(--marigold);
    padding: 13px;
    box-shadow: var(--shadow-1);
    border-radius: 4px;
    /* background-color: var(--debug); */
}

/* This variable affects the stroke width of the icon, which is a property of vector-based graphics. */
.search-btn ion-icon {
    --ionicon-stroke-width: 80px;
}

.nav-toggle-btn {
    color: var(--white);
    font-size: 30px;
    border: 1px solid var(--white);
    padding: 4px;
}


/* These CSS rules create a toggle effect for the display of elements within the navigation toggle button. When the "active" class is present on the "nav-toggle-btn" element, the "close" element is hidden, and the "menu" element is displayed. Conversely, when the "active" class is not present, the "close" element is displayed, and the "menu" element is hidden. This allows for dynamic switching of displayed elements based on the state of the navigation toggle button. */

.nav-toggle-btn.active .close,
.nav-toggle-btn .menu {
    display: none;
}

.nav-toggle-btn .close,
.nav-toggle-btn.active .menu {
    display: block;
}



.navbar {
    background-color: var(--eerie-black-1);
    color: var(--white);
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    width: 100%;
    max-width: 350px;
    max-height: 0;
    transition: 0.25s var(--cubic-out);
    overflow: hidden;
    /* background-color: var(--debug); */
}

.navbar.active {
    visibility: visible;
    max-height: 275px;
    /* Specifies how long the transition from the old value to the new value should take. */
    transition-duration: 0.5s;
}

/* Select all besides the last child/element. */
.navbar-item:not(:last-child) {
    border-block-end: 1px solid var(--white_15);
}

.navbar-link {
    padding: 10px 25px;
    transition: var(--transition);
}

.navbar-link:is(:hover, :focus) {
    background-color: var(--white_10);
}




/* ================== */
/* Search Box */
/* ================== */

.search-container {
    background-color: var(--rich-black-fogra-29_95);
    position: fixed;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-inline: 40px;
    z-index: 6;
    visibility: hidden;
    opacity: 0;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.search-container.active {
    visibility: visible;
    opacity: 1;
}

.search-container .input-wrapper {
    position: relative;
    max-width: 560px;
    width: 100%;
}

.search-container .search-field {
    color: var(--white);
    font-size: 2rem;
    padding: 20px;
    /* Logical 'padding-right'*/
    padding-inline-end: 60px;

    /* Logical 'border-bottom'*/
    border-block-end: 3px solid var(--white_10);
    outline: none;
    transition: var(--transition);
}

.search-container .search-field:focus {
    border-color: var(--light-gray-2);
}

/* ======================================= */
/* ChatGpt */
/* .search-container .search-field::-webkit-search-cancel-button { display: none; } */
/* ======================================= */



.search-container .search-field::-webkit-search-cancel-button {
    /* The element and its descendants generates no boxes. */
    display: none;
}

.search-container .search-submit {
    position: absolute;
    top: 50%;
    right: 20px;
    transform: translateY(-50%);
    font-size: 25px;
    color: var(--marigold);
}

/* ======================================= */
/* ChatGpt */
/* .search-container .search-submit ion-icon { --ionicon-stroke-width: 70px; } */
/* ======================================= */

.search-container .search-submit ion-icon {
    --ionicon-stroke-width: 70px;
}

.search-container .search-close {
    position: fixed;
    inset: 0;

    /* The platform-dependent default cursor. Often rendered as an arrow. */
    cursor: default;
    z-index: -1;
    /* background-color: var(--debug); */
}



/* ================== */
/* Hero*/
/* ================== */


.hero-banner {
    display: none;
}

.hero {
    --section-padding: 60px;
    /* Logical 'margin-top' */
    margin-block-start: 84px;
    /* margin-block-start: 100px; */
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    text-align: center;
    min-height: 100vh;
    display: grid;
    align-items: center;
}

.hero-subtitle {
    color: var(--marigold);
    font-size: var(--fs-6);
    font-weight: var(--fw-700);
    text-transform: uppercase;
    /* background-color: var(--debug); */
}


.hero-title {
    margin-block: 15px 12px;
    /* background-color: var(--debug); */
}

.hero-text {
    color: var(--light-gray-2);
    margin-block-end: 45px;
    /* background-color: var(--debug); */
}


.skewBg.read-more::after {
    transform: skewX(-16deg) translateX(var(--translateX, -8px));
}


/* ================================ */
/* BRAND */
/* ================================ */


.brand {
    --section-padding: 60px;
    background-image: var(--gradient);
    /* DeBug */
    /* background-image: none; */
    /* background-color: var(--debug); */
}

.brand .has-scrollbar {
    padding-block-end: 5px;
    /* padding-block-end: 0; */
}

.brand .has-scrollbar::-webkit-scrollbar {
    /* Undo */
    /* display: none; */
}

.brand-item {
    min-width: calc(50% -10px);
    /* The scroll-snap-align property specifies the box’s snap position as an alignment of its snap area (as the alignment subject) within its snap container’s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value. */
    scroll-snap-align: start;
    /* background-color: var(--debug); */
}

.brand-item>img {
    margin-inline: auto;
    /* background-color: var(--debug); */
}



/* ================================ */
/* Latest Game */
/* ================================ */


.section-wrapper {
    position: relative;
    background-color: var(--white);
    z-index: 1;
}


.section-wrapper::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 57%;
    background-image: url(./web-assets/section-wrapper-bg.png);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    z-index: -1;
    /* background-color: var(--debug); */
}

.latest-game .section-title {
    /* Logical 'margin-bottom'.  */
    margin-block-end: 80px;
    /* background-color: var(--debug); */
}

.latest-game .has-scrollbar {
    /* margin-inline: -30px; */
    margin-inline: -15px;

    padding-inline: 15px;

    /* The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: */

    scroll-padding-inline-start: 15px;
    /* background-color: var(--debug); */
}

.latest-game-card {
    position: relative;
    box-shadow: var(--shadow-2);
    /* background-color: var(--debug); */
}

.latest-game-card .card-content {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    /* right: -15px; */
    background-color: var(--xiketic_90);
    padding: 35px 25px;
    /* background-color: var(--debug); */
}

.latest-game-card .card-badge {
    /* background-color: var(--debug); */
    position: absolute;
    bottom: 100%;
    left: 25px;
}

.latest-game-card .card-title {
    margin-block-end: 12px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.latest-game-card .card-title:is(:hover, :focus) {
    color: var(--marigold);
}

.latest-game-card .card-price {
    color: var(--silver);
    font-size: var(--fs-10);
    font-weight: var(--fw-600);
}

.latest-game-card .card-price .span {
    margin-inline-start: 5px;
}


/* ==================================================== */
.skewBg.card-badge::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: calc(100% + 8px);
    width: 5px;
    transform: skewX(-10deg) translateX(var(--translateX, -9px));
    /* transform: skewX(-16deg) translateX(var(--translateX, -8px )); */
    background-color: var(--marigold);
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.skewBg.card-badge:is(:hover, :focus)::after {
    --translateX: 12px;
}

/* ==================================================== */



/* ================================ */
/* Live Match */
/* ================================ */

.live-match {
    padding-block-start: 0;
    overflow-x: hidden;
}

.live-match .section-title {
    margin-block-end: 90px;
    /* background-color: var(--debug); */
}

.live-match-banner {
    position: relative;
    background-color: var(--light-gray-1);
    border-radius: 6px;
    overflow: hidden;
    box-shadow: var(--shadow-3);
}

.live-match-banner .play-btn {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--marigold);
    font-size: 60px;
    /* background-color: var(--debug); */
}

.live-match-player {
    position: relative;
    padding-block-start: var(--section-padding);
    /* background-color: var(--debug); */
}

.live-match-banner::after {
    content: "LIVE";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -40%);
    font-size: 15rem;
    font-weight: var(--fw-600);
    color: var(--cultured-2);
    opacity: 0;
    transition: all var(--transition2);
    /* z-index: -1; */
    /* background-color: var(--debug); */
}


.live-match-banner:is(:hover, :focus)::after {
    opacity: 1;
    /* z-index: unset; */
}

.live-match-banner .player {
    max-width: max-content;
}

.live-match-banner .player-2 {
    margin-inline-start: auto;
}

.live-match-detail {
    margin-block: 50px;
    /* background-color: var(--debug); */
}

.live-match-subtitle {
    background-color: var(--marigold);
    color: var(--white);
    font-size: var(--fs-9);
    text-transform: uppercase;
    font-weight: var(--fw-700);
    letter-spacing: 2px;
    padding: 4px 20px;
    max-width: max-content;
    margin-inline: auto;
    margin-block-end: 30px;
}

.live-match-time {
    color: var(--xiketic);
    font-size: var(--fs-1);
    font-weight: var(--fw-700);
    max-width: max-content;
    margin-inline: auto;
    line-height: 1;
}


/* ================================ */
/* Featured Game */
/* ================================ */


.featured-game {
    background-color: var(--cultured-2);
}

.featured-game .section-title {
    color: var(--xiketic);
    margin-block-end: 90px;
    /* background-color: var(--debug); */
}

.featured-game .has-scrollbar {
    gap: 0;
    /* background-color: var(--debug); */
}

.featured-game-card {
    position: relative;
}

.featured-game-card :is(.card-content, .card-content-overlay) {
    position: absolute;
    /* background-color: var(--debug); */
}

.featured-game-card .card-content {
    bottom: 0;
    left: 0;
    right: 0;
    padding: 30px 35px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.featured-game-card .card-content-overlay {
    inset: 0;
    background-color: var(--marigold_75);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.featured-game-card .card-title {
    margin-block-end: 5px;
    /* background-color: var(--debug); */
}

.featured-game-card .card-meta {
    color: var(--white);
    font-size: var(--fs-11);
    font-weight: var(--fw-500);
    text-transform: uppercase;
    display: flex;
    /* flex-direction: column; */
    align-items: center;
    gap: 4px;
    /* background-color: var(--debug); */
}

.featured-game-card .card-content .card-meta {
    color: var(--platinum);
    /* background-color: var(--debug); */
}

.featured-game-card .card-content ion-icon {
    color: var(--marigold);
    font-size: 14px;
    /* background-color: var(--debug); */
}

.featured-game-card .card-icon {
    margin-block-end: 20px;
    /* background-color: var(--debug); */
}


/* ============================================================= */
.featured-game-card .icon-beat {
    animation: beats 1.5s infinite;
}

@keyframes beats {
    0% {
        transform: scale(1);
    }

    50% {
        transform: scale(1.2);
    }

    100% {
        transform: scale(1);
    }
}


/* ============================================================= */

.featured-game-card .card-content-overlay .card-title {
    color: var(--xiketic);
    /* background-color: var(--debug); */
}

.featured-game-card .card-content-overlay .span {
    color: var(--white);
    /* background-color: var(--debug); */
}

.featured-game-card:is(:hover, :focus-within) .card-content {
    opacity: 0;
    /* background-color: var(--debug); */
}

.featured-game-card:is(:hover, :focus-within) .card-content-overlay {
    opacity: 1;
}



/* ================================ */
/* SHOP */
/* ================================ */

.shop {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    /* background-color: var(--debug); */
}

.shop .section-text {
    /* background-color: var(--debug); */
    margin-block: 50px 60px;
}

.shop .has-scrollbar {
    margin-inline: -15px;
    padding-inline: 15px;
    scroll-padding-inline-start: 15px;
    /* background-color: var(--debug); */
}

.shop-card {
    box-shadow: var(--shadow-4);
    height: 100%;
    /* background-color: var(--debug); */
}

.shop-card .card-content {
    position: relative;
    padding: 25px;
    padding-block-start: 40px;
    /* background-color: var(--debug); */
}

.shop-card .card-badge {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
    /* background-color: var(--debug); */
}

.shop-card .h3 {
    font-size: var(--fs-7);
}

.shop-card .card-title {
    transition: var(--transition);
    margin-block-end: 10px;
    /* background-color: var(--debug); */
}

.shop-card .card-title:is(:hover, :focus) {
    color: var(--marigold);
    transform: scale(1.1);
}

/* M-Code */
/* =========================================== */

.shop-card .img-holder {
    overflow: hidden;
}

.shop-card .img-cover {
    transition: var(--transition);
}

.shop-card .img-cover:is(:hover, :focus) {
    transform: scale(1.2) translateY(10px);
}

/* =========================================== */

.shop-card .card-wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: var(--marigold);
    /* background-color: var(--debug); */
}

.shop-card .card-price {
    font-family: var(--ff-oxanium);
    font-weight: var(--fw-800);
    /* background-color: var(--debug); */
}

.shop-card .card-btn {
    color: inherit;
    font-size: 18px;
    padding: 7px;
    border: 1px solid var(--english-violet);
    border-radius: 4px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.shop-card .card-btn:is(:hover, :focus) {
    background-color: var(--marigold);
    color: var(--xiketic);
    border-color: var(--marigold);
}


/* ================================ */
/* Blog */
/* ================================ */

.blog {
    background-color: var(--white);
    /* background-color: var(--debug); */
}

.blog .section-title {
    color: var(--xiketic);
    /* background-color: var(--debug); */
}

.blog .section-text {
    color: var(--dim-gray);
    margin-block: 50px 60px;
    /* background-color: var(--debug); */
}

.blog-list {
    display: grid;
    gap: 50px;
    /* background-color: var(--debug); */
}

.blog-card {
    /* background-color: var(--debug); */
}

.blog-card .card-banner {
    /* padding-bottom: 30px; */
    margin-block-end: 30px;
    /* background-color: var(--debug); */
}

.blog-card .card-meta-list {
    display: flex;
    align-items: center;
    gap: 20px;
    /* padding-bottom: 30px; */
    /* background-color: var(--debug); */
}

.blog-card .card-meta-item {
    display: flex;
    align-items: center;
    gap: 5px;
    color: var(--quick-silver);
    font-size: var(--fs-11);
    font-weight: var(--fw-600);
    text-transform: uppercase;
    letter-spacing: 1px;
    /* padding-bottom: 30px; */
    /* background-color: var(--debug); */
}

.blog-card .card-meta-item ion-icon {
    --ionicon-stroke-width: 50px;
    color: var(--marigold);
    /* padding-bottom: 30px; */
    /* background-color: var(--debug); */
}

.blog-card .card-meta-item a.item-text {
    transition: var(--transition);
    /* padding-bottom: 30px; */
    /* background-color: var(--debug); */
}

.blog-card .card-meta-item a.item-text:is(:hover, :focus) {
    color: var(--marigold);
}

.blog-card .card-title {
    color: var(--raisin-black-1);
    font-size: var(--fs-5);
    font-family: var(--ff-oxanium);
    font-weight: var(--fw-800);
    text-transform: uppercase;
    line-height: 1.2;
    margin-block: 10px 15px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.blog-card .card-title:is(:hover, :focus) {
    color: var(--marigold);
}

.blog-card .card-text {
    color: var(--dim-gray);
    font-size: var(--fs-8);
    font-weight: var(--fw-500);
    line-height: 1.8;
    margin-block-end: 25px;
    /* background-color: var(--debug); */
}

.blog-card .card-link {
    color: var(--raisin-black-1);
    font-size: var(--fs-9);
    font-weight: var(--fw-700);
    text-transform: uppercase;
    display: flex;
    align-items: center;
    gap: 4px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.blog-card .card-link ion-icon,
.blog-card .card-link:is(:hover, :focus) {
    color: var(--marigold);
}

.blog-card .card-link ion-icon {
    transition: var(--transition);
}

.blog-card .card-link:is(:hover, :focus) ion-icon {
    transform: scale(1.3) translateX(7px);
}


/* ================================ */
/* NEWSLETTER */
/* ================================ */

.newsletter {
    margin-block-end: 80px;
    /* background-color: var(--debug); */
}

.newsletter-card {
    background-color: var(--raisin-black-3);
    padding: 40px 15px;
    margin-block-start: -55px;
    border-radius: 80px;
    /* background-color: var(--debug); */
}

.newsletter .h2 {
    font-size: var(--fs-4);
    text-transform: uppercase;
    text-align: center;
    margin-block-end: 30px;
    /* background-color: var(--debug); */
}

.newsletter .input-wrapper {
    max-width: 300px;
    margin-inline: auto;
    margin-block-end: 10px;
    /* background-color: var(--debug); */
}

.newsletter .email-field {
    font-size: var(--fs-9);
    color: var(--white);
    font-weight: var(--fw-500);
    padding: 17px 45px;
    /* Logical 'padding-right' */
    padding-inline-end: 20px;
    outline: none;
    /* background-color: var(--debug); */
}

.newsletter .input-wrapper ion-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    left: 20px;
    color: var(--marigold);
    --ionicon-stroke-width: 50px;
    width: 20px;
    height: 20px;
    /* background-color: var(--debug); */
}

/* ============================ */
.newsletter button ion-icon {
    /* transition: var(--transition: 1s;); */
    transition: var(--transition);
}

.newsletter button:is(:hover, :focus) ion-icon {
    transform: translateX(7px) translateY(-3px) scale(1.2);
    /* color: var(--debug); */
}


/* =================================================== */

.newsletter .input-wrapper::before {
    /* Inherited Background color turns into black/raisin */
    --bg: var(--raisin-black-4);
    --skewX: -20deg;
    /* background-color: var(--debug); */
}

/* M-Code */
/* ========================================================= */
.newsletter .btn.skewBg::after {
    transform: skewX(-20deg) translateX(var(--translateX, -9px));
    display: none;
    /* background-color: var(--debug); */
}

/* ========================================================= */

.newsletter-btn {
    font-size: var(--fs-9);
    display: flex;
    align-items: center;
    gap: 5px;
    padding-inline: 20px;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.newsletter-btn::after {
    /* Uncomment */
    /* display: none; */
    /* background-color: var(--debug); */
}

.newsletter-btn::before {
    --skewX: -20deg;
    transition: var(--transition);
    /* background-color: var(--debug); */
}

.newsletter-btn:is(:hover, :focus) {
    /* Uncommet */
    /* color: var(--marigold); */
    /* background-color: var(--debug); */
}

.newsletter-btn:is(:hover, :focus)::before {
    background-color: var(--white);
}

.newsletter-btn:is(:hover, :focus)::after {
    background-color: var(--white);
}




/* ================================ */
/* FOOTER */
/* ================================ */

.footer {
    color: var(--roman-silver);
    /* background-color: var(--debug); */
}

.footer-top {
    padding-block-end: var(--section-padding);
    /* background-color: var(--debug); */
}

.footer-top .container {
    display: grid;
    gap: 50px;
    /* background-color: var(--debug); */
}

.footer .logo {
    margin-block-end: 35px;
    /* background-color: var(--debug); */
}

.footer-text,
.footer .contact-list {
    font-size: var(--fs-8);
    font-weight: var(--fw-500);
    line-height: 1.8;
    /* background-color: var(--debug); */
}

.footer-text {
    margin-block-end: 15px;
    /* background-color: var(--debug); */
}

.contact-item:not(:last-child) {
    margin-block-end: 10px;
    /* background-color: var(--debug); */
}

.contact-item {
    display: flex;
    align-items: flex-start;
    gap: 10px;
    /* background-color: var(--debug); */
}

.contact-icon {
    margin-block-start: 3px;
    font-size: 17px;
    /* background-color: var(--debug); */
}

.footer-list-title {
    position: relative;
    color: var(--silver);
    font-family: var(--ff-oxanium);
    text-transform: uppercase;
    font-weight: var(--fw-800);
    padding-block-end: 20px;
    margin-block-end: 35px;
    /* background-color: var(--debug); */
}

.footer-list-title::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 30px;
    height: 3px;
    background-color: var(--marigold);
    /* background-color: var(--debug); */
}

.footer-link {
    font-size: var(--fs-9);
    /* Use the max-content inline size or max-content block size. */
    max-width: max-content;
    transition: var(--transition);
    padding-block: 8px;
    font-weight: var(--fw-500);
    /* background-color: var(--debug); */
}

.footer-link:is(:hover, :focus) {
    color: var(--marigold);
    transform: scale(1.06) translateX(6px);
    cursor: pointer;
}

.footer .social-wrapper {
    margin-block-end: 50px;
    /* background-color: var(--debug); */
}

.footer .social-list {
    display: flex;
    gap: 10px;
    /* color: var(--debug); */
}

.footer .social-link {
    color: var(--white);
    padding: 10px;
    border-radius: 2px;
    /* color: var(--debug); */
}

.footer-newsletter {
    position: relative;
    /* background-color: var(--debug); */
}

.footer-newsletter .email-field {
    background-color: var(--raisin-black-4);
    padding: 12px 20px;
    padding-inline-end: 60px;
    font-size: var(--fs-9);
    color: var(--white);
    /* background-color: var(--debug); */
}

.footer-btn {
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 53px;
    background-color: var(--marigold);
    color: var(--xiketic);
    display: grid;
    align-items: center;
    place-content: center;
    /* background-color: var(--debug); */
}



.footer-btn:is(:hover, :focus) ion-icon {
    animation: takeoff 1.5s infinite;
    /* animation: takeoff 1.5s forwards; */
}


@keyframes takeoff {

    0% {
        transform: translateX(0) translateY(0) scale(1);
    }

    25% {
        transform: translateX(-10px) translateY(10px) scale(0.8);
    }

    75% {
        transform: translateX(10px) translateY(-10px) scale(1.2);
    }

    100% {
        transform: translateX(0) translateY(0) scale(1);
    }
}

.footer-bottom-img {
    display: none;
}

.footer-bottom {
    background-color: var(--eerie-black-2);
    padding-block: 20px;
    text-align: center;
    /* background-color: var(--debug); */
}

.copyright {
    font-size: var(--fs-9);
    font-weight: var(--fw-500);
    line-height: 1.8;
    /* background-color: var(--debug); */
}

.copyright-link {
    display: inline-block;
    color: var(--marigold);
}

.back-top-btn {
    position: fixed;
    bottom: 10px;
    right: 15px;
    background-color: var(--marigold);
    padding: 12px;
    z-index: 4;
    transition: var(--transition);
    opacity: 0;
    visibility: hidden;
    border-radius: 2px;
    transform: translateY(50px);
}

.back-top-btn.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(-10px);
}

.back-top-btn ion-icon {
    animation: backtotop 1.9s infinite;
    /* font-size: 10px; */
    /* color: var(--debug); */
}



@keyframes backtotop {

    0% {
        transform: translateY(5px) scale(0.9);
    }

    50% {
        transform: translateY(-5px) scale(1.05);
    }

    100% {
        transform: translateY(5px) scale(0.9);
    }
}


/* ================================ */
/* Responsive for Larger than 576px screen */
/* ================================ */

@media (min-width: 576px) {

    /* :root {
        --marigold: hsl(42, 99%, 46%);
    } */

    /* 
    *REUSED STYLE
     */

    .container {
        max-width: 540px;
        width: 100%;
        margin-inline: auto;
        /* background-color: var(--debug); */
    }

    .h1 {
        --fs-2: 7rem;
    }

    /* 
    *HEADER
    */

    .header-actions {
        gap: 40px;
        /* background-color: var(--debug); */
    }

    .cart-btn {
        display: block;
        position: relative;
        color: var(--white);
        font-size: 20px;
        /* background-color: var(--debug); */
    }

    .cart-badge {
        position: absolute;
        top: -6px;
        right: -10px;
        color: var(--eerie-black-1);
        background-color: var(--marigold);
        font-size: var(--fs-11);
        border-radius: 20px;
        padding: 3px 5px;
        line-height: 1;
        font-weight: var(--fw-800);
        /* background-color: var(--debug); */
    }

    /* 
    *SEARCH BOX
    */

    /* The provided CSS code targets an element with the class name .search-container and applies (a background color) to its child elements with the class names .search-field and .search-submit. */

    .search-container :is(.search-field, .search-submit) {
        font-size: var(--fs-3);
        /* background-color: var(--debug); */
    }

    /* 
    *BRAND
    */

    .brand-item {
        min-width: calc(33.33% - 13.33px);
        /* background-color: var(--debug); */
    }

    /* 
    *FEATURED GAME
    */

    .featured-game .scrollbar-item {
        min-width: 50%;
    }

    /* 
    *BLOG
    */

    .blog-list {
        /* 75% is the value assigned to grid-template-columns. In this case, it sets the width of the columns in the grid container to occupy 75% of the available width. */
        grid-template-columns: 75%;
        justify-content: center;
        /* background-color: var(--debug); */
    }

    /* 
    *FOOTER
    */

    .footer-top .container {
        grid-template-columns: 1fr 1fr;
        /* background-color: var(--debug); */
    }

    .footer-brand,
    .footer-wrapper {
        /* Shorthand for 'grid-column-start' and 'grid-column-end'.*/
        /* Make thus into vertical columns */
        grid-column: 1/3;
        /* background-color: var(--debug); */
    }

    /* 1/3 is the value assigned to grid-column. It indicates that the grid item should start at the first vertical grid line and end at the third vertical grid line. */
    /* The grid item will span two columns, starting from the first vertical grid line and ending at the third vertical grid line.*/
}




/* ================================ */
/* Responsive for Larger than 760px screen */
/* ================================ */

@media (min-width: 760px) {

    /* 
    *REUSED STYLE
    */

    .container {
        max-width: 720px;
        /* background-color: var(--debug); */
    }

    .scrollbar-item {
        min-width: calc(50% - 15px);
    }

    /* 
    *HERO
    */

    .hero-text {
        /* 60ch is the value assigned to max-width specifies that the maximum width of the .hero-text element should be 60 characters (ch) wide. */
        max-width: 60ch;
        margin-inline: auto;
    }

    /* 
    *BRAND
    */

    .brand-item {
        min-width: calc(25% - 15px);
        /* background-color: var(--debug); */
    }

    /* 
    *LIVE MATCH
    */

    .live-match-banner .play-btn {
        font-size: 120px;
        /* background-color: var(--debug); */
    }

    .live-match-banner::after {
        font-size: 30rem;
        /* background-color: var(--debug); */
    }

    /* 
    *BLOG
    */

    .blog-list {
        grid-template-columns: 1fr 1fr;
        /* background-color: var(--debug); */
    }

    /* 
    *NEWSLETTER
    */

    .newsletter :is(.input-wrapper, .newsletter-btn) {
        margin: 0;
        /* background-color: var(--debug); */
    }

    .newsletter .input-wrapper {
        /* Acts as either `inherit` or `initial`, depending on whether the property is inherited or not. */
        max-width: unset;
        width: 100%;
        /* width: calc(100% - 20px); */
    }

    .newsletter .h2 {
        --fs-4: 2.6rem;
        /* background-color: var(--debug); */
    }

    .newsletter-form {
        display: flex;
        gap: 10px;
        max-width: 500px;
        width: 100%;
        margin-inline: auto;
        /* background-color: var(--debug); */
    }

    /* 
    *FOOTER
    */

    .footer-brand,
    .footer-wrapper {
        grid-column: auto;
        /* background-color: var(--debug); */
    }

    .footer-bottom-img {
        display: block;
    }

    .footer-bottom {
        text-align: left;
        /* background-color: var(--debug); */
    }

    .footer-bottom .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 20px;
        /* background-color: var(--debug); */
    }

    /* 
    *Back To Top
    */

    .back-top-btn {
        bottom: 50px;
        right: 45px;
        /* background-color: var(--debug); */
    }

}

/* ================================ */
/* Responsive for Larger than 992px screen */
/* ================================ */

@media (min-width: 992px) {

    /* 
    *REUSED STYLE
    */

    .container {
        max-width: 960px;
    }

    :is(.header, .hero, .live-match) .container {
        max-width: unset;
    }

    .scrollbar-item {
        min-width: calc(33.33% - 20px);
    }

    /* 
    *HEADER
    */
    .header-top {
        display: block;
        background-image: url(./web-assets/header-top-bg.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        /* color: var(--debug); */
    }

    .header-top .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        /* background-color: var(--debug); */
    }

    .countdown-text {
        color: var(--quick-silver);
        font-size: var(--fs-10);
        font-weight: var(--fw-600);
        /* background-color: var(--debug); */
    }

    .countdown-text .span {
        /* A block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the box itself is formatted as an inline box. */
        display: inline-block;
        color: var(--xiketic);
        font-size: 1.8rem;
        font-weight: var(--fw-700);
        padding: 10px 20px;
        margin-inline: 5px;
        /* background-color: var(--debug); */
    }

    .header :is(.social-wrapper, .social-list) {
        display: flex;
        align-items: center;
        /* background-color: var(--debug); */
    }

    .header .social-wrapper {
        gap: 15px;
        /* gap: 150px; */
        /* background-color: var(--debug); */
    }

    .header .social-list {
        gap: 10px;
        /* background-color: var(--debug); */
    }

    .social-title {
        color: var(--white);
        font-family: var(--ff-oxanium);
        font-size: var(--fs-8);
        font-weight: var(--fw-700);
        /* background-color: var(--debug); */
    }

    .header .social-link {
        background-color: var(--jet);
        color: var(--marigold);
        font-size: var(--fs-9);
        padding: 8px 10px;
        /* background-color: var(--debug); */
        transition: all var(--transition);
    }

    /* M-Code */
    .header .social-link:hover {
        background-color: var(--marigold);
        color: var(--jet);
        transform: scale(1.2);
    }

    .header-bottom {
        outline: 1px solid hsla(0, 0%, 0%, 0.2);
        /* outline: 10px solid hsla(59, 100%, 57%, 0.2); */
        /* background-color: var(--debug); */
    }

    .header-bottom::before {
        display: block;
        top: 0;
        left: -15px;
        right: auto;
        width: 180px;
        --skewX: 16deg;
    }

    .nav-toggle-btn {
        display: none;
    }

    .navbar,
    .navbar.active {
        /* unset is a value assigned to the all property. It resets all CSS properties to their initial values or inherited values if specified. */
        all: unset;
        margin-inline: auto 15px;
        /* background-color: var(--debug); */
    }

    .navbar-list {
        display: flex;
        /* background-color: var(--debug); */
    }

    .navbar-item:not(:last-child) {
        border-block-end: none;
    }

    .navbar-link {
        color: var(--white);
        font-family: var(--ff-oxanium);
        font-size: var(--fs-11);
        text-transform: uppercase;
        font-weight: var(--fw-700);
        padding: 10px 20px;
    }

    .navbar-link::before {
        display: block;
        opacity: 0;
        transition: var(--transition);
    }

    .navbar-link:is(:hover, :focus) {
        background-color: transparent;
        color: var(--xiketic);
        /* background-color: var(--debug); */
    }

    .navbar-link:is(:hover, :focus)::before {
        opacity: 1;
    }

    /* 
    *HERO
    */

    .hero {
        text-align: left;
    }

    .hero-banner {
        display: block;
        /* background-color: var(--debug); */
    }

    .hero .container {
        display: grid;
        grid-template-columns: 1fr 0.9fr;
        align-items: center;
        gap: 50px;
        /* background-color: var(--debug); */
    }

    .btn {
        margin-inline: 0;
    }

    /* 
    *BRAND
    */

    .brand-item {
        min-width: calc(20% - 16px);
    }

    /* 
    *LATEST GAME
    */

    .latest-game .has-scrollbar {
        padding-block-end: 0;
        /* background-color: var(--debug); */
    }

    /* 
    *LIVE MATCH
    */

    .live-match-banner {
        max-width: 700px;
        margin-inline: auto;
        /* max-width: 100%; */
    }

    .live-match-player {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        align-items: center;
        /* background-color: var(--debug); */
    }

    .live-match-detail {
        margin-block: 0px;
        /* background-color: var(--debug); */
    }

    /* 
    *FEATURED GAME
    */

    .featured-game .scrollbar-item {
        min-width: 33.33%;
        /* Debug */
        /* min-width: 25%; */
    }

    /* 
    *BLOG
    */

    .blog-list {
        grid-template-columns: repeat(3, 1fr);
        gap: 30px;
        /* background-color: var(--debug); */
    }

    /* 
    *NEWSLETTER
    */

    .newsletter-form {
        max-width: 650px;
        /* background-color: var(--debug); */
    }

    /* 
    *FOOTER
    */

    .footer .container {
        grid-template-columns: 1fr 0.7fr 0.7fr;
        /* Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap. */
        column-gap: 80px;
        /* background-color: var(--debug); */
    }

}

@media (min-width: 1200px) {

    /* 
    *REUSED STYLE
    */

    .container,
    :is(.header, .hero, .live-match) .container {
        max-width: 1230px;
        /* background-color: var(--debug); */
    }

    .h1 {
        --fs-2: 7.5rem;
        /* color: var(--debug); */
    }

    .scrollbar-item {
        min-width: calc(25% - 22.5px);
        /* background-color: var(--debug); */
    }

    /* 
    *HEADER
    */

    .header-bottom::before {
        width: 270px;
        /* background-color: var(--debug); */
    }

    .navbar-link {
        font-size: var(--fs-9);
        padding-inline: 25px;
        /* background-color: var(--debug); */
    }

    /* 
    *HERO
    */

    .hero .container {
        grid-template-columns: 1fr 1fr;
        /* background-color: var(--debug); */
    }

    /* 
    *BRAND
    */

    .brand-item {
        min-width: calc(16.16% -16.66px);
        /* background-color: var(--debug); */
    }

    /* 
    *LIVE MATCH
    */

    .section-wrapper::before {
        height: 72%;
        /* background-color: var(--debug); */
    }

    .live-match-banner {
        max-width: max-content;
    }

    .live-match-player {
        /* background-color: var(--debug); */
    }

    .live-match-player::after {
        font-size: 35rem;
    }

    /* 
    *FEATURED GAME
    */

    .featured-game .has-scrollbar {
        padding-block-end: 0;
        /* background-color: var(--debug); */
    }

    .featured-game .scrollbar-item {
        min-width: 25%;
    }

    /* 
    *SHOP
    */

    .shop .has-scrollbar {
        padding-block-end: 15px;
        /* background-color: var(--debug); */
    }

    /* 
    *NEWSLETTER
    */

    .newsletter-card {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-inline: 70px;
        /* background-color: var(--debug); */
    }

    .newsletter .h2 {
        margin-block-end: 0;
        /* background-color: var(--debug); */
    }

    .newsletter-form {
        margin-inline: 0;
        /* background-color: var(--debug); */
    }

    /* 
    *FOOTER
    */

    .footer .container {
        grid-template-columns: 1fr 0.7fr 0.7fr 1fr;
        /* background-color: var(--debug); */
    }
}














/* ================================ */
/* NOTES */
/* ================================ */
/* The cubic-bezier() function is a CSS timing function that allows for the creation of custom acceleration and deceleration effects during CSS transitions or animations. The function takes four parameters, each specifying the position of control points in a cubic Bézier curve.

In the provided example, the cubic-bezier(0.33, 0.85, 0.4, 0.96) function represents a specific cubic Bézier curve with the following control point values:

The first control point is (0.33, 0.85).
The second control point is (0.4, 0.96).
These control points determine the shape of the curve, which influences the timing and acceleration of the transition or animation. */